1. Setup
    1.1 create tile class
        1.1.1 - tile class needs multiple properties/funcitons including:
            - tile id
            - current number
            - current position [x,y]
            - previous position [x,y]
            - isEmpty
            - fontSize (changing if number is greater than 2 digits etc)
            - constructor
            - Function - createTile
            - Function - gets/sets 
            - Function - moveTile
            - Function - mergeTile (updates score as well)
            - Function - changeValue - this changes number/color/fontsize
            - Funciton - deleteTile

    1.2 setup grid of 4x4 squares
        1.2.1 - can be done either in JS or HTML, dont think too much dif for just making the initial grid
        1.2.2 - create reset button
        1.2.3 - create a draw/update function to update the page when needed.

    1.3 setup matrix arrays [x,y]
        1.3.1 - create a double array to store the tiles
        1.3.2 - link each array element to HTML grid elements
        1.3.3 - create 2 initial tile objects, same every game with default values
        1.3.4 - call drawTiles

    1.4 create click events
        1.4.1 - seperate click events for up, down, left, right
        1.4.2 - click events must do the following (based on each direction pressed):
            - scan through the array to work out current position of tiles, if left or right, process arrays into rows, if up or down, do as columns
            - work out how many tiles each row or column has to the wall the direction was pressed, e.g. if left if pressed, how many tiles has row 1 got until the wall, this will help to then move all the tiles in each row.
            - scan through each row in the direction pressed to see if 2 tiles have the same value, if so, then call tile class methods, move, merge, changevalue and delete one tile. If values are not the same and room on the left to move, then only call moveTile. 
            If no room to move, do nothing. Example with press left, start row 1, with position 1, is value on right the same? If so, merge, change value and delete tile on right. Once checked, is there room on the left to move, if so, move. Repeat for every tile.
            Everytime a tile class method is called, the matrix array is updated.
        1.4.3 - Call create new tile and randomly add to any of the empty spaces. this is done by going through the matrix array and adding the ones with isEmpty into a new array which is 'currentEmptyTiles'
        1.4.4 - once all tiles have moved/updated, check if there are any tiles that are empty, if not - call board full.
        1.4.4 - Function - board full - if the board is full, run through all rows and columns to see if any values next to eachother that are the same, if so, carry on, if not - game over

    1.5 reset button - resets matrix array to start and draws board.

    1.6 main js class
        1.6.1 - global var for score
        1.6.2 - won or lost
        1.6.3 - will be quite empty apart from grid with game



ideas - have the array pop all empty spaces when shifted, 





